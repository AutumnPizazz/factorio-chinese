[mod-name]
RenaiTransportation=跳跳火车和扔扔机械臂 [RenaiTransportation]
[mod-description]
RenaiTransportation=火车可以嗖 哗啦的飞出去！ 然后咚 啪嚓的着陆！

[entity-name]
BouncePlate=弹跳板
BouncePlate5=弹跳板
BouncePlate15=弹跳板
PrimerBouncePlate=触发式弹跳板
PrimerSpreadBouncePlate=精准弹跳板
SignalBouncePlate=信号弹跳板
DirectedBouncePlate=定向弹跳板
DirectorBouncePlate=逻辑弹跳板

OpenContainer=开口箱
PlayerLauncher=玩家发射器
HatchRT=舱口
RTThrower-EjectorHatchRT=喷射舱口

RTTrainRamp=火车坡道(起跳模式)
RTTrainRampNoSkip=火车坡道(时刻表模式)
RTTrainBouncePlate=火车弹跳板
RTTrainDirectedBouncePlate=定向火车弹跳板
RTMagnetTrainRamp=磁助式弹射坡道(起跳模式)
RTMagnetTrainRampNoSkip=磁助式弹射坡道(时刻表模式)
RTMagnetRail=磁助式火车弹跳板
RTMagnetRampDrain=磁助式斜坡功率缓冲器
RTTrainRamp-placer=火车坡道
RTMagnetTrainRamp-placer=磁助式火车坡道
RTImpactUnloader-placer=冲击卸荷机
RTImpactUnloader=冲击卸荷机

RTPayloadWagon=有效载荷货车
RTImpactWagon=冲击车厢
RTZiplinePowerDrain=电动滑索车
RTZiplineTerminal=滑索车站点
RTThrower-PrimerThrower=炮塔扔扔机械臂

[entity-description]
DirectorBouncePlate=逻辑弹跳板可以以某种方式分辨落在其上的物品之间的差异，并根据您的编程方式将它们弹向不同的方向。\n单击以设置项目过滤器。\n设置在插槽 1-10 中的项目将向上弹起，11-20 将向右弹起，21-30 向下，31-40 向左。\n单击以在alt视图中查看距离
BouncePlate=被投掷到弹跳板上的物品或玩家会继续向前弹跳10个格。可在所有4个方向上使用。\n单击以在alt视图中查看距离。
PrimerBouncePlate=手榴弹，太空舱，地雷，火箭弹，炮弹和其他物品在弹跳后将被激发。额外的能量使射程增加到40格。非基本事物只会弹射10个格。\n按F键以切换到传递模式。\n单击以在alt视图中切换范围可见性。
PrimerSpreadBouncePlate=弹药，弹药，地雷，火箭弹，炮弹和其他物品在弹跳后将被激发。额外的能量将范围扩大到37-40格，铺开40格。非基本事物只会弹射10个格。\n按F键以切换到精确模式。\n单击以在alt视图中切换范围可见性。
SignalBouncePlate=行为就像一个常数运算器。当物品或玩家弹起时，信号打开/关闭。\n单击以在alt视图中切换可见性。
DirectedBouncePlate=像普通的弹跳板一样，但是有方向。\n单击以在alt视图中切换范围可见性。
OpenContainer=不带盖的铁箱子，可以接受扔扔机械臂扔来的物品。
PlayerLauncher=玩家站在上面按F键，可以使自己向前弹跳10格。如果降落在弹跳板上，可以跳得更远。
HatchRT=在有存储格的箱子或者组装机上安装一个舱口盖，以使所扔物品掉入其中。
RTThrower-EjectorHatchRT=一个舱口，它不会将物品接收到它所放置的东西内，而是将里面的物品喷射出 20 格外。
RTTrainRamp=[font=default-semibold][color=173,128,254]起跳模式（红色边框）：[/color][/font]列车跳过火车坡道后，跳过当前前往的站点，向下一个列车时刻表站点行驶。\n请记住，如果火车靠近一个车站，或者跳车后的下一站无法到达，它可能会减速。火车到达坡道时的速度决定了它将飞多远。\n火车必须笔直地驶入坡道。\n按F键可以切换为时刻表模式。
RTTrainRampNoSkip=[font=default-semibold][color=173,128,254]时刻表模式（蓝色边框）：[/color][/font]列车跳过火车坡道后，继续按当前列车的时刻表行驶到站点。\n请记住，如果火车靠近一个车站，或者跳车后的下一站无法到达，它可能会减速。火车到达坡道时的速度决定了它将飞多远。\n火车必须笔直地驶入坡道。\n按F键可以切换为起跳模式。
RTTrainRamp-placer=列车经过这个坡道会飞起，能飞多远取决于列车的速度。按F键可以切换为“起跳模式”或者“时刻表模式”。 \n[font=default-semibold][color=173,128,254]起跳模式：[/color][/font]列车跳过火车坡道后，跳过当前前往的站点，向下一个列车时刻表站点行驶。\n[font=default-semibold][color=173,128,254]时刻表模式：[/color][/font]列车跳过火车坡道后，继续按当前列车的时刻表行驶到站点。\n火车必须笔直地驶入坡道。
RTTrainBouncePlate=降落在这些放大的弹跳板上的火车将再次向前弹跳。\n仅限火车使用。
RTTrainDirectedBouncePlate=降落在这些放大的弹跳板上的火车将再次向前弹跳，但是有方向。\n仅限火车使用。
RTMagnetTrainRamp=[font=default-semibold][color=173,128,254]起跳模式（红色）：[/color][/font]列车跳过火车坡道后，跳过当前前往的站点，向下一个列车时刻表站点行驶。\n单击磁助式火车坡道可以显示可选距离，再次点击铁轨可以设定火车从该坡道上降落的位置。\n强大的电磁体将引导火车车厢到达所需的着陆点，每次跳跃从斜坡的缓冲区拉出时，每个格大约需要200kJ。缓冲区必须装满才能使磁铁工作，否则斜坡将像常规斜坡一样工作。当磁力弹射坡道突然跳动时，请确保始终至少有一个车架完全在地面上。\n按F键可以切换为时刻表模式。
RTMagnetTrainRampNoSkip=[font=default-semibold][color=173,128,254]时刻表模式（蓝色）：[/color][/font]列车跳过火车坡道后，继续按当前列车的时刻表行驶到站点。\n单击磁助式火车坡道可以显示可选距离，再次点击铁轨可以设定火车从该坡道上降落的位置。\n强大的电磁体将引导火车车厢到达所需的着陆点，每次跳跃从斜坡的缓冲区拉出时，每个格大约需要200kJ。缓冲区必须装满才能使磁铁工作，否则斜坡将像常规斜坡一样工作。当磁力弹射坡道突然跳动时，请确保始终至少有一个车架完全在地面上。\n按F键切换为起跳模式。
RTMagnetRail=由磁力火车坡道控制的强大电磁铁。它排斥或吸引火车车厢，以帮助他们达到理想的跳跃范围。粒子是磁场的可视化。
RTMagnetRampDrain=该缓冲器为连接到其磁铁坡道的电磁垫供电，从而在跳跃过程中将所有功率充满到这些垫中。缓冲区大小随跳转距离而定，缓冲区填充为4MW。
RTMagnetTrainRamp-placer=借助强大的电磁铁产生的磁力，列车经过这个坡道会飞起，能飞多远可以配置。\n按F键可以切换为“起跳模式”或者“时刻表模式”。 \n[font=default-semibold][color=173,128,254]起跳模式：[/color][/font]列车跳过火车坡道后，跳过当前前往的站点，向下一个列车时刻表站点行驶。\n[font=default-semibold][color=173,128,254]时刻表模式：[/color][/font]列车跳过火车坡道后，继续按当前列车的时刻表行驶到站点。\n点击磁助式火车坡道，可以设置您希望从该坡道跳下的列车降落的位置。\n强大的电磁铁将引导列车车厢到达所需的着陆点，从坡道的缓冲区一次拉动的每跳大约消耗200kJ。\n缓冲区必须装满磁铁才能工作，否则坡道将像常规坡道一样工作。当磁力弹射坡道突然跳动时，确保至少有一节车厢始终完全在地面上。\n火车必须笔直地驶入坡道。
RTImpactUnloader=与冲击车厢搭配使用，当一列火车与之相撞时，所有连接的车厢都会打开舱口，导致其货物飞出。碰撞速度越快，飞出的物品越多，飞得越远。碰撞后，列车跳过当前前往的站点，向下一个列车时刻表站点行驶。允许使用放置在撞击卸载机之后的火车停靠站实现自动化。\n必须放在笔直的铁轨上。
RTImpactUnloader-placer=与冲击车厢搭配使用，当一列火车与之相撞时，所有连接的车厢都会打开舱口，导致其货物飞出。碰撞速度越快，飞出的物品越多，飞得越远。碰撞后，列车跳过当前前往的站点，向下一个列车时刻表站点行驶。允许使用放置在撞击卸载机之后的火车停靠站实现自动化。\n可以在mod设置中调整创建的最大数量。
RTPayloadWagon=当爆炸物着陆时，内部的可填充物品将被激活并以10格的半径飞出。货车中的爆炸物将爆炸半径增加0.2格，上限为150枚爆炸时的+30格。\n为了限制延迟，车厢中的每个可充填物品只有1堆叠会飞出。
RTImpactWagon=当装有冲击车厢的列车与冲击卸荷器相撞时，所有连接的冲击货车都会打开舱口，导致其货物飞出。碰撞速度越快，飞出的物品越多，飞得越远。\n可以在mod设置中调整创建的射弹的最大数量。
RTZiplineTerminal=如果您配备了可编程的电动滑索控制器，您可以点击该终端，通过路径对控制器进行编程，以到达同一网络上的任何其他终端，从而使其自动在那里引导电动滑索车。
RTThrower-PrimerThrower=机械臂/炮塔的混合体，这个机械臂可以向敌人投掷原始物品（手榴弹、胶囊、火箭等）。

# [technology-name]
# se~no=弹弹学(飞行) 
# HatchRTTech=弹弹学(舱口) 
# EjectorHatchRTTech=弹弹学(喷射) 
# SignalPlateTech=弹弹学(信号) 
# PrimerPlateTech=弹弹学(精准) 
# RTSimonSays=弹弹学(逻辑) 
# RTThrowerTime=扔扔学 
# RTFocusedFlinging=扔扔学(距离) 
# PrimerThrowerTech=扔扔学(炮塔) 
# RTFlyingFreight=跳跳学(坡道) 
# RTImpactTech=跳跳学(冲击) 
# RTFreightPlates=跳跳学(弹跳板) 
# RTMagnetTrainRamps=跳跳学(磁助坡道) 
# RTDeliverThePayload=跳跳学(载荷) 
# RTZiplineTech=滑滑学(滑索) 
# RTZiplineControlTech1=滑滑学(控制器) 

[technology-name]
# se~no=弹弹学 1
# HatchRTTech=弹弹学 2
# EjectorHatchRTTech=弹弹学 3
# SignalPlateTech=弹弹学 4
# PrimerPlateTech=弹弹学 5
# RTSimonSays=弹弹学 6 
# RTThrowerTime=扔扔学 1
# RTFocusedFlinging=扔扔学 2
# PrimerThrowerTech=扔扔学 3
# RTFlyingFreight=跳跳学 1
# RTImpactTech=跳跳学 2 
# RTFreightPlates=跳跳学 3
# RTMagnetTrainRamps=跳跳学 4
# RTDeliverThePayload=跳跳学 5 
# RTZiplineTech=滑滑学 1
# RTZiplineControlTech1=滑滑学 2


se~no=弹弹学 1
HatchRTTech=弹弹学 2
EjectorHatchRTTech=弹弹学 3
RTThrowerTime=扔扔学 1
SignalPlateTech=弹弹学 4
PrimerPlateTech=弹弹学 5
RTFocusedFlinging=扔扔学 2
RTFlyingFreight=跳跳学 1
RTFreightPlates=跳跳学 3
RTZiplineTech=滑滑学 1
RTZiplineTech2=滑滑学 2
RTZiplineTech3=滑滑学 3
RTZiplineTech4=滑滑学 4
RTZiplineTech5=滑滑学 5
RTZiplineControlTech1=滑滑学(控制器)
RTProgrammableZiplineControlTech=滑滑学(自动驾驶)
RTMagnetTrainRamps=跳跳学 4
RTDeliverThePayload=跳跳学 5 
RTImpactTech=跳跳学 2 
RTSimonSays=弹弹学 6 
PrimerThrowerTech=扔扔学 3



[technology-description]
se~no=发射玩家在空中飞行。
HatchRTTech=舱口可以使扔出的物品落入除了敞开的箱子之外的其他东西中。
EjectorHatchRTTech=像一个舱口，但反过来，可以喷射物品。
RTThrowerTime=为所有机械臂添加扔扔版本，包括mod添加的机械臂。
SignalPlateTech=可以连接信号的弹跳板，可以和扔扔机械臂连接信号。
PrimerPlateTech=曾经您希望可以更远的投掷手榴弹和火箭吗？
RTFocusedFlinging=允许您按F键将扔扔机械臂的投掷距离在 1~15/25 格内调整。
RTFlyingFreight=火车会飞？你没看错。
RTFreightPlates=就像弹跳垫，但用于火车。
RTZiplineTech=使用现有的电力网络作为高速公路！
RTProgrammableZiplineControlTech=想象一下手动转向多么令人蛋疼。现在使用该控制器可以让您在两个电动滑索车终端之间快速移动。
RTMagnetTrainRamps=不论速度如何，都可以使用电磁铁的力量将火车引导至准确的着陆点。
RTDeliverThePayload=与火车坡道结合，将爆炸性武器直接运送到预定的使用地点。
RTImpactTech=10秒火车卸货？尝试一下火车即时卸货。当然，你需要接住所有的东西。
RTSimonSays=西蒙说:绿色电路向左反弹。

[controls]
RTInteract=交互
RTtcaretnI=撤销交互
RTClick=Wube（指捷克佬），请让我检测点击次数，而无需为其创建自定义的“热键”

[item-name]
RTZiplineItem=电动滑索车
RTZiplineItem2=轻快电动滑索车
RTZiplineItem3=快速电动滑索车
RTZiplineItem4=极速电动滑索车
RTZiplineItem5=核动力滑索车
RTZiplineControlsItem=电动滑索控制器
RTZiplineCrankControlsItem=电动滑索曲柄控制器
RTProgrammableZiplineControlsItem=可编程电动滑索控制器
RTTrainRampItem=火车坡道
RTMagnetTrainRampItem=磁控火车缓冲器

[item-description]
RTZiplineItem=这款电动式滑索车将电线杆上的电流消耗掉，助你高速滑行。\n装备电动滑索控制器后，鼠标对电线杆按F键,方向键控制滑行，再次按F键跳下。遇到死角时自动跳下。\n消耗450kW的功率。
RTZiplineItem2=速度是普通电动滑索车的两倍！使用1MW功率。
RTZiplineItem3=速度是轻快电动滑索车的两倍！使用5MW功率。
RTZiplineItem4=速度是快速电动滑索车的两倍！使用10MW功率。
RTZiplineItem5=比极速电动滑索车快得多！你能开这么快吗？使用50MW功率。
RTZiplineControlsItem=在装备模块槽中放置一组电动滑索控制器以让你利用电力网络快速移动。
RTZiplineCrankControlsItem=滑索时按住射击键（空格）可额外提高速度。一段时间后需要更换。
RTProgrammableZiplineControlsItem=这些控制器可以编程为在任意两个电动滑索车终端之间自动驾驶，而无需转向。

[test]
combo=__1__\n__2__

[mod-setting-name]
RTThrowersSetting=启用原版扔扔机械臂/舱口盖/弹跳板
RTBounceSetting=启用原版扔扔机械臂和特殊的弹跳板（需要原版的弹跳板）
RTTrainRampSetting=启用火车坡道。如果启用了可抛投掷，也将启用有效载荷货车
RTMagRampRange=最大磁铁斜坡范围
RTImpactSetting=启用冲击货车和冲击卸货机
RTTrainBounceSetting=启用火车弹跳板（需要火车坡道）
RTZiplineSetting=启用电力滑索
RTZiplineSmoothSetting=飞索运动
RTModdedThrowers=启用改装的扔扔机械臂（需要启用原版扔扔机械臂）
RTOverflowComp=防止扔扔机械臂溢出[实验性]
RTImpactGrouping=项目分组的影响
RTShowRange=在内置弹跳垫上显示距离指示器

[mod-setting-description]
RTBounceSetting=电路弹跳板和增强弹跳板。
RTZiplineSmoothSetting=在速度更快且两极距离更近的情况下，相机的晃动可能会让一些人感到头晕。
RTModdedThrowers=启用各种改装的扔扔机械臂，否则仅制造扔扔机械臂。
RTOverflowComp=打开或关闭逻辑，有助于最大限度地减少投掷者将物品洒得到处都是的溢出。禁用可能会节省UPS
RTThrowersSetting=启用扔扔机械臂、弹跳垫、玩家发射器和舱口的基本功能。需要打开才能创建改装的扔扔机械臂。
RTImpactGrouping=撞击车中每种物品的最大投射物数量。创建更少的投射物有助于减少延迟，将更多项目分组到每个投射物中，但看起来不那么酷。
RTShowRange=在alt视图中，可以通过单击弹跳板来打开或关闭弹跳板的范围指示器。默认情况下，此设置可在首次生成时切换它们是否可见。

[virtual-signal-name]
DirectorBouncePlateUp=向上弹跳
DirectorBouncePlateRight=向右弹跳
DirectorBouncePlateDown=向下弹跳
DirectorBouncePlateLeft=向左弹跳

[virtual-signal-description]
DirectorBouncePlateUp=在此插槽中设置一个项目，使其在降落到该反弹垫上后向上弹跳
DirectorBouncePlateRight=在此插槽中设置一个项目，使其在降落到该反弹垫上后向右弹跳
DirectorBouncePlateDown=在此插槽中设置一个项目，使其在降落到该弹跳垫上后向下弹跳
DirectorBouncePlateLeft=在此插槽中设置一个项目，使其在降落到该反弹垫上后向左弹跳

[magnet-ramp-stuff]
Step2=现在单击范围内的一条直轨以设置磁铁坡道跳跃距离。
missing=磁铁坡道不见了。你做了什么？！
BeyondRange=超出范围，最大范围为__1__格。
StraightRail=那不是直轨！
set=设定范围: __1__ 格. 所需电源: __2__J
unable=无法在此建立坡道，请重试！

[zipline-stuff]
reqs=我需要一个配备控制器的电动滑索车，并选择乘坐电力路线。
terminalReqs=要使用电动滑索车终端，我需要一个配备和选择可编程控制器的电动滑索车控制器。
range=臣妾够不到！
NotConnected=那根电线杆没有连接任何东西！
missing=下一根电线杆不见了！
NotOnSameNetwork=这些终端不再连接上！
MissingChoice=其中一个终端缺失！
terminal=终端
rename=重命名
ChangeName=确认名称更改
select=选择目的地

[RTmisc]
EightMax=传送带可容纳8件物品，防止扔下的物品溢出

[thrower-gen]
DefaultDesc=此机械臂已重新编程接线，可以将物品抛向空中并落在最大__1__格外的地方。一旦研究相关科技，就可以按F键配置 1~15 格的投掷范围。
HasDesc=此机械臂已重新编程接线，可以将物品抛向空中并落在最大__1__格外的地方。一旦研究相关科技，就可以按F键配置 1~25 格的投掷范围。\n__2__
name=扔扔__1__